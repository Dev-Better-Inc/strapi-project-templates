name: Deploy
on:
  push:
    paths:
      - .github/workflows/deploy.yml
      - packages/*/src/**/*
      - packages/cms/api/**/*
      - packages/cms/componets/**/*
      - packages/cms/config/**/*
    branches:
      - latest

env:
  docker_buildkit: 1
  docker_repository: ${{ secrets.docker_registry }}/app

jobs:
  build-react:
    name: Build React
    runs-on: self-hosted
    container:
      image: dcr.bndigital.dev/library/nodejs:latest
    steps:
      - name: Setup builder
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.docker_registry }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: packages/react
          file: packages/react/Dockerfile
          cache-from: type=registry,ref=${{ env.docker_repository }}/react:latest
          cache-to: type=inline
          tags: ${{ env.docker_repository }}/react:latest

  build-vue:
    name: Build Vue
    runs-on: self-hosted
    container:
      image: dcr.bndigital.dev/library/nodejs:latest
    steps:
      - name: Setup builder
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.docker_registry }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: packages/vue
          file: packages/vue/Dockerfile
          cache-from: type=registry,ref=${{ env.docker_repository }}/vue:latest
          cache-to: type=inline
          tags: ${{ env.docker_repository }}/vue:latest

  build-landing:
    name: Build Landing
    runs-on: self-hosted
    container:
      image: dcr.bndigital.dev/library/nodejs:latest
    steps:
      - name: Setup builder
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.docker_registry }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: packages/landing
          file: packages/landing/Dockerfile
          cache-from: type=registry,ref=${{ env.docker_repository }}/landing:latest
          cache-to: type=inline
          tags: ${{ env.docker_repository }}/landing:latest

  build-cms:
    name: Build CMS
    runs-on: self-hosted
    container:
      image: dcr.bndigital.dev/library/nodejs:latest
    steps:
      - name: Setup builder
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.docker_registry }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: packages/cms
          file: packages/cms/Dockerfile
          cache-from: type=registry,ref=${{ env.docker_repository }}/cms:latest
          cache-to: type=inline
          tags: ${{ env.docker_repository }}/cms:latest

  deploy:
    name: Release Helm chart
    needs:
      - build-react
      - build-vue
      - build-landing
      - build-cms
    runs-on: self-hosted
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.digitalocean_token }}

      - name: Save K8S config
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.kubernetes_cluster }} --set-current-context

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.8.0

      - name: Setup Helm diff
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 2
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Helmfile apply
        run: helmfile apply --set podAnnotations.timestamp=${{ steps.time.outputs.time }}

  notify:
    name: Notify Slack
    runs-on: self-hosted
    needs: [ deploy ]
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Build pipeline completed
          SLACK_USERNAME: Github Bot
          SLACK_CHANNEL: chatops
          SLACK_ICON: https://cdn.bndigital.co/images/logo.png
          SLACK_MESSAGE: |
            Staging environment updated.
            See latest builds on https://app.bndigital.dev. Code analysis report: https://sonarqube.bndigital.dev
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: ''
