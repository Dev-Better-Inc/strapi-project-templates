name: Staging
on:
  workflow_dispatch: { }
  pull_request:
    branches:
      - latest
    paths:
      - helmfile.yaml
      - Dockerfile
      - package.json
      - packages/cms/src/**/*
      - packages/website/src/**/*
      - packages/cms/config/**/*

env:
  SKAFFOLD_DEFAULT_REPO: ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.repository.name }}
  APP_ENV: staging
  VAULT_ENDPOINT: ${{ secrets.VAULT_ENDPOINT }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  ci:
    name: CI Pipeline
    environment: staging
    runs-on: self-hosted

    steps:
      - name: Import Vault secrets
        uses: hashicorp/vault-action@v2.3.1
        id: secrets
        with:
          method: github
          url: ${{ env.VAULT_ENDPOINT }}
          githubToken: ${{ env.GITHUB_TOKEN }}
          secrets: |
            infrastructure/data/bndigital/${{ env.APP_ENV }}/kubernetes cluster | KUBERNETES_CLUSTER ;
            infrastructure/data/bndigital/${{ env.APP_ENV }}/digitalocean token | DIGITALOCEAN_TOKEN ;
            infrastructure/data/bndigital/${{ env.APP_ENV }}/registry docker-username | DOCKER_USERNAME ;
            infrastructure/data/bndigital/${{ env.APP_ENV }}/registry docker-password | DOCKER_PASSWORD ;
            infrastructure/data/bndigital/${{ env.APP_ENV }}/sonarqube host | SONAR_HOST_URL ;
            infrastructure/data/bndigital/${{ env.APP_ENV }}/sonarqube token | SONAR_TOKEN ;

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Sonar scanner
        uses: sonarsource/sonarqube-scan-action@v1.0.0

      - name: Generate env variables
        uses: bn-digital/vault-env@latest
        with:
          endpoint: ${{ env.VAULT_ENDPOINT }}
          token: ${{ env.GITHUB_TOKEN }}
          template: packages/cms/.env.${{ env.APP_ENV }}
          target: packages/cms/.env

      - name: Login Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.SKAFFOLD_DEFAULT_REPO }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker images
        uses: hiberbee/github-action-skaffold@1.14.0
        with:
          command: build

      - name: Setup DigitalOcean cli
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DIGITALOCEAN_TOKEN }}

      - name: Configure Kubernetes context
        run: doctl kubernetes cluster kubeconfig save ${{ env.KUBERNETES_CLUSTER }} --set-current-context

      - name: Release Helm charts
        uses: hiberbee/github-action-helm@1.9.1
        with:
          helmfile: apply
          environment: ${{ env.APP_ENV }}